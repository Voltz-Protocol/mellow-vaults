{
    "version": "1.0",
    "chainId": "1",
    "createdAt": 1654007302649,
    "meta": {
      "name": "Transactions Batch",
      "description": "",
      "txBuilderVersion": "1.8.0",
      "createdFromSafeAddress": "0xb527E950fC7c4F581160768f48b3bfA66a7dE1f0",
      "createdFromOwnerAddress": "",
      "checksum": "0x6e317afc197279541328cf252e50867cfa15d2ed7e7426244328bdf15b94cfe7"
    },
    "transactions": [
      {{#voltzVaults}}

      {
        "to": "{{voltzVaultGovernance}}",
        "value": "0",
        "data": null,
        "contractMethod": {
        "inputs": [
          {
            "internalType": "address[]",
            "name": "vaultTokens_",
            "type": "address[]"
          },
          {
            "internalType": "address",
            "name": "owner_",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "marginEngine_",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "voltzVaultHelperSingleton_",
            "type": "address"
          },
          {
            "components": [
              {
                "internalType": "int24",
                "name": "tickLower",
                "type": "int24"
              },
              {
                "internalType": "int24",
                "name": "tickUpper",
                "type": "int24"
              },
              {
                "internalType": "uint256",
                "name": "leverageWad",
                "type": "uint256"
              },
              {
                "internalType": "uint256",
                "name": "marginMultiplierPostUnwindWad",
                "type": "uint256"
              }
            ],
            "internalType": "struct IVoltzVault.InitializeParams",
            "name": "initializeParams",
            "type": "tuple"
          }
        ],
        "name": "createVault",
        "outputs": [
          {
            "internalType": "contract IVoltzVault",
            "name": "vault",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "nft",
            "type": "uint256"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      "contractInputsValues": {
          "vaultTokens_": "[ {{#tokens}} \"{{address}}\"{{^last}},{{/last}} {{/tokens}}]",
          "owner_": "{{owner}}",
          "marginEngine_": "{{marginEngine}}",
          "voltzVaultHelperSingleton_": "{{voltzVaultHelperSingleton}}",
          "initializeParams": "[\"{{initializeParams.tickLower}}\", \"{{initializeParams.tickUpper}}\", \"{{initializeParams.leverageWad}}\", \"{{initializeParams.marginMultiplierPostUnwindWad}}\"]"
      }
    },
    
    {{/voltzVaults}}

    {
        "to": "{{erc20VaultGovernance}}",
        "value": "0",
        "data": null,
        "contractMethod": {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IERC20Vault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },

      "contractInputsValues": {
          "vaultTokens_": "[ {{#tokens}} \"{{address}}\"{{^last}},{{/last}} {{/tokens}}]",
          "owner_": "{{owner}}"
      }
    },

    {
        "to": "{{masterStrategy}}",
        "value": "0",
        "data": null,
        "contractMethod": {
      "inputs": [
        {
          "internalType": "contract IERC20Vault",
          "name": "erc20vault_",
          "type": "address"
        },
        {
          "internalType": "contract IVoltzVault[]",
          "name": "vaults_",
          "type": "address[]"
        },
        {
          "components": [
            {
              "internalType": "int256",
              "name": "sigmaWad",
              "type": "int256"
            },
            {
              "internalType": "int256",
              "name": "maxPossibleLowerBoundWad",
              "type": "int256"
            },
            {
              "internalType": "uint256",
              "name": "proximityWad",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "weight",
              "type": "uint256"
            }
          ],
          "internalType": "struct LPOptimiserStrategy.VaultParams[]",
          "name": "vaultParams_",
          "type": "tuple[]"
        },
        {
          "internalType": "address",
          "name": "admin_",
          "type": "address"
        }
      ],
      "name": "createStrategy",
      "outputs": [
        {
          "internalType": "contract LPOptimiserStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },

      "contractInputsValues": {
          "erc20vault_": "{{erc20VaultAddress}}",
          "vaults_": "[{{#voltzVaultAddresses}} \"{{address}}\"{{^last}},{{/last}} {{/voltzVaultAddresses}}]",
          "vaultParams_" : "[{{#vaultStrategyParams}} [ \"{{params.sigmaWad}}\", \"{{params.maxPossibleLowerBoundWad}}\", \"{{params.proximityWad}}\", \"{{params.weight}}\"]{{^last}},{{/last}} {{/vaultStrategyParams}} ]",
          "admin_": "{{owner}}"
      }
    },

    {{#vaultNFTs}}
    {
        "to": "{{vaultRegistry}}",
        "value": "0",
        "data": null,
        "contractMethod": {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },

      "contractInputsValues": {
          "to": "{{erc20RootVaultGovernance}}",
          "tokenId": "{{tokenId}}"
      }
    },
    {{/vaultNFTs}}

    {
        "to": "{{erc20RootVaultGovernance}}",
        "value": "0",
        "data": null,
        "contractMethod": {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "vaultTokens_",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "strategy_",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "subvaultNfts_",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "owner_",
          "type": "address"
        }
      ],
      "name": "createVault",
      "outputs": [
        {
          "internalType": "contract IERC20RootVault",
          "name": "vault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "nft",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },

      "contractInputsValues": {
          "vaultTokens_": "[ {{#tokens}} \"{{address}}\"{{^last}},{{/last}} {{/tokens}}]",
          "strategy_": "{{strategy}}",
          "subvaultNfts_": "[ {{#vaultNFTs}} \"{{tokenId}}\"{{^last}},{{/last}} {{/vaultNFTs}}]",
          "owner_": "{{owner}}"
      }
    },

    ]
  }